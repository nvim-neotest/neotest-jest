local adapter = require("neotest-jest")({ jestCommand = "jest" })
local async = require("nio").tests
local stub = require("luassert.stub")
local util = require("neotest-jest.util")

describe("adapter.is_test_file", function()
  async.it("matches jest test files", function()
    assert.True(adapter.is_test_file("./spec/basic.test.ts"))
    assert.True(adapter.is_test_file("./spec/__tests__/some.test.ts"))
  end)

  async.it("does not match nil or plain js/ts files", function()
    assert.False(adapter.is_test_file("nil"))
    assert.False(adapter.is_test_file("./index.js"))
    assert.False(adapter.is_test_file("./index.ts"))
  end)

  async.it("matches all supported extensions", function()
    assert.True(adapter.is_test_file("./spec/test_paths/file.spec.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.spec.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.spec.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.spec.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.spec.tsx"))

    assert.True(adapter.is_test_file("./spec/test_paths/file.e2e-spec.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.e2e-spec.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.e2e-spec.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.e2e-spec.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.e2e-spec.tsx"))

    assert.True(adapter.is_test_file("./spec/test_paths/file.test.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.test.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.test.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.test.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.test.tsx"))

    assert.True(adapter.is_test_file("./spec/test_paths/file.unit.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.unit.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.unit.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.unit.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.unit.tsx"))

    assert.True(adapter.is_test_file("./spec/test_paths/file.regression.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.regression.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.regression.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.regression.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.regression.tsx"))

    assert.True(adapter.is_test_file("./spec/test_paths/file.integration.js"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.integration.jsx"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.integration.coffee"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.integration.ts"))
    assert.True(adapter.is_test_file("./spec/test_paths/file.integration.tsx"))
  end)
end)
